name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - &cache-poetry
        name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-

      - &cache-pip
        name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: pip-${{ runner.os }}-

      - name: Install project
        run: |
          python -m pip install -U pip
          pip install -e .[dev]

      - name: Run tests
        run: pytest -q

      - name: Execute notebooks
        run: |
          mkdir -p executed_notebooks
          jupyter nbconvert --to notebook --execute notebooks/*.ipynb \
            --output-dir executed_notebooks \
            --ExecutePreprocessor.timeout=0

      - name: Upload notebooks
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: notebooks-py${{ matrix.py }}
          path: executed_notebooks
